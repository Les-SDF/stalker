# For a symfony application to work properly, you MUST store this .htaccess in
# the same directory as your front controller, index.php, in a standard symfony
# web application is under the "public" project subdirectory.

# Use the front controller as index file.
DirectoryIndex index.php

# Uncomment the following line if you install assets as symlinks or if you 
# experience problems related to symlinks when compiling LESS/Sass/CoffeScript.
# Options +FollowSymlinks

# Disabling MultiViews prevents unwanted negotiation, e.g. "/index" should not resolve
# to the front controller "/index.php" but be rewritten to "/index.php/index".
<IfModule mod_negotiation.c>
    Options -MultiViews
</IfModule>

<IfModule mod_headers.c>
    # CORS headers
    Header set Access-Control-Allow-Origin *
    Header set Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
    Header set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
    
    # Handle preflight requests
    RewriteEngine On
    RewriteCond %{REQUEST_METHOD} OPTIONS
    RewriteRule ^(.*)$ $1 [R=200,L]
</IfModule>

<IfModule mod_rewrite.c>
    RewriteEngine On

    # This RewriteRule is used to dynamically discover the RewriteBase path.
    # See https://httpd.apache.org/docs/current/mod/mod_rewrite.html#rewriterule
    # Here we will compare the stripped per-dir path *relative to the filesystem
    # path where the .htaccess file is read from* with the URI of the request.
    # 
    # If a match is found, the prefix path is stored into an ENV var that is later 
    # used to properly prefix the URI of the front controller index.php.
    # This is what makes it possible to host a Symfony application under a subpath,
    # such as example.com/subpath

    RewriteCond %{REQUEST_URI}::$0 ^(/.+)/(.*)::\2$
    RewriteRule .* - [E=BASE:%1]

    # Sets the HTTP_AUTHORIZATION header removed by Apache
    RewriteCond %{HTTP:Authorization} .+
    RewriteRule ^ - [E=HTTP_AUTHORIZATION:%0]

    # Removes the /index.php/ part from a URL, if present
    RewriteCond %{ENV:REDIRECT_STATUS} =""
    RewriteRule ^index\.php(?:/(.*)|$) %{ENV:BASE}/$1 [R=301,L]

    # If the requested filename exists, simply serve it.
    # Otherwise rewrite all other queries to the front controller.
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^ %{ENV:BASE}/index.php [L]
</IfModule>

<IfModule !mod_rewrite.c>
    <IfModule mod_alias.c>
        # When mod_rewrite is not available, we instruct a temporary redirect 
        # to the front controller explicitly so that the website
        RedirectMatch 307 ^/$ /index.php/
    </IfModule>
</IfModule>

<Limit GET POST PUT PATCH DELETE>
     Order deny,allow
     Require all granted
</Limit>
